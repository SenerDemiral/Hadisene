@inject AppState my
@inject IDbCon db
@inject IModalService Modal

@if (tbl != null)
{
	<table>
		<caption>
			<button @onclick="@(() => ShowMdf(0))">
				<span class="material-symbols-outlined">add</span>Periyodikler
			</button>
		</caption>
		<tbody>
			<tr>
				<th>edit</th>
				<th>psf</th>
				<th>ad</th>
				<th>period</th>
				<th>sonraki<br />planlanan başlangıç</th>
				<th>konu</th>
				<th>●özel</th>
			</tr>
			@foreach (var rec in tbl)
			{
				<tr>
					<td>
						<button @onclick="@(() => ShowMdf(rec.PPId))">
							<span class="material-symbols-outlined">edit</span>
							<span style="font-size:.6rem;">@rec.PPId</span>
						</button>
					</td>
					<td>
						<input type="checkbox" checked=@rec.isPsf onclick="return false" style="width:auto" />
					</td>
					<td>@rec.Ad</td>
					<td>@rec.PrdAd</td>
					<td>@rec.RSD?.ToString("dd.MM.yy HH:mm")</td>
					<td>@rec.TskAd</td>
					<td>@rec.UUAd</td>
				</tr>
			}
		</tbody>
	</table>
}

@code {
	[Parameter] public bool Prv { get; set; }
	private List<PP> tbl;

	ModalOptions options = new ModalOptions()
		{
			HideHeader = true,
			Size = ModalSize.Large,
			ActivateFocusTrap = false,
		};

	public async Task ShowMdf(int id)
	{
		ModalParameters mp = new();
		mp.Add("PPId", id);

		var x = Modal.Show<PrdMdf>("", mp, options);
		var r = await x.Result;
		if (r.Confirmed)
		{
			await Read();
		}
	}

	private async Task Read()
	{
		try
		{
			using var conn = db.GetConnection();
			tbl = (await conn.QueryAsync<PP>("PP_QRY",
				new { a = my.Id, b = my.FrmId, c = Prv ? 1 : 0 }, // SP parametreleri DB deki sırasıyla gönderilmeli
				commandType: CommandType.StoredProcedure)
			).ToList();

			//Notifier.Notify += OnNotify;
		}
		catch (Exception ex)
		{
			ModalParameters mp = new();
			mp.Add("Message", ex.Message);
			Modal.Show<ModalWarning>("", mp);
		}
	}

	protected override async Task OnInitializedAsync()
	{
		await Read();
	}

	public sealed class PP
	{
		public int PPId;
		public int Psf;
		public bool isPsf => Psf == 1 ? true : false;

		public string? Ad;
		public string? PrdAd;
		public string? TskAd;
		public string? UUAd;
		public DateTime? RSD;
	}
}
